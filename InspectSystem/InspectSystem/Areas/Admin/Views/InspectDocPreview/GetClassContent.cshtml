
<link rel="stylesheet" href="~/Content/MyStyles/MyStyleForClassContent.css" />

@{
    var DocItems = ViewData["itemsPreview"] as List<InspectSystem.Models.InspectItem>;
    var DocFields = ViewData["fieldsPreview"] as List<InspectSystem.Models.InspectField>;
    var DropDowns = ViewData["dropdownsPreview"] as List<InspectSystem.Models.InspectFieldDropDown>;
}

<h3 style="margin-top:0.5em">@ViewBag.ClassName</h3>
<hr />
@using (Ajax.BeginForm("#", "#", new AjaxOptions
{
    HttpMethod = "POST",
    OnBegin = "$.Toast.showToast({ 'title': '資料儲存中，請稍待...', 'icon': 'loading', 'duration': 0 })",
    OnSuccess = "showmsgSave"
}, new { id = "detailsForm" }))
{
    @Html.AntiForgeryToken()

    var currentItemName = "0";
    int i = 0, j = 0;
    <div class="container col-md-12">
        @foreach (var item in DocItems)
        {
            /* Display the ItemName when ItemName is not the same. */
            if (item.ItemName != currentItemName)
            {
                <div class="row itemRow">
                    <div class="col-md-2 itemName mainCol">
                        @Html.DisplayFor(modelItem => item.ItemName)
                    </div>
                    <div class="col-md-6 mainCol">
                        @foreach (var fieldItem in DocFields)
                        {
                            /* Display all the FieldName belong the current Item. */
                            if (item.ItemId == fieldItem.ItemId)
                            {
                        <div class="col-md clearfix">
                            <span class="col-xs-3 fieldTitle">
                                @if (fieldItem.FieldName != null)
                                {
                                    @Html.DisplayFor(modelItem => fieldItem.FieldName)
                                }
                            </span>

                            <!-- Display textbox or checkbox for all fields, except boolean type. -->
                            @if (fieldItem.ItemId == item.ItemId && fieldItem.FieldId == fieldItem.FieldId &&
                                fieldItem.DataType != "boolean")
                            {

                                switch (fieldItem.DataType)
                                {
                                    case "string":
                                        <span>
                                            @if (fieldItem.IsRequired == true)
                                            {
                                                <span style="color: red">*</span>
                                            }
                                            @Html.Editor("Value", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </span>
                                        break;

                                    case "float":
                                        <span class="form-inline">
                                            @if (fieldItem.IsRequired == true)
                                            {
                                                <span style="color: red">*</span>
                                            }
                                            @Html.Editor("Value", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.DisplayFor(modelItem => fieldItem.UnitOfData)
                                        </span>
                                        break;

                                    case "checkbox":
                                        <span>
                                            @Html.CheckBox("Value", true)
                                        </span>
                                        break;

                                    case "dropdownlist":
                                        char[] charSpilt = new char[] { ';' };
                                        var fieldDropdown = DropDowns.Where(d => d.ItemId == fieldItem.ItemId && d.FieldId == fieldItem.FieldId).ToList();
                                        List<SelectListItem> dropDownList = new List<SelectListItem>();
                                        foreach (var dropdownitem in fieldDropdown)
                                        {
                                            dropDownList.Add(new SelectListItem()
                                            {
                                                Text = dropdownitem.Value,
                                                Value = dropdownitem.Value
                                            });
                                        }
                                        <span>
                                            @Html.DropDownList("Value", (IEnumerable<SelectListItem>)dropDownList, new { @class = "form-control", style = "width: 50%" })
                                        </span>
                                        break;
                                }
                                i++;
                            }
                            else if (fieldItem.ItemId == item.ItemId && fieldItem.FieldId == fieldItem.FieldId &&
                                     fieldItem.DataType == "boolean")
                            {
                                i++; // Skip an array space to let the boolean type insert later.
                            }
                        </div>
                            }
                        }
                    </div>
                    <div class="col-md-4">
                        @foreach (var fieldItem in DocFields)
                        {
                            /* Display all the FieldName belong the current Item. */
                            if (item.ItemId == fieldItem.ItemId)
                            {

                                /* Display textbox or checkbox for all fields. */
                                if (fieldItem.ItemId == item.ItemId && fieldItem.FieldId == fieldItem.FieldId)
                                {
                                    if (fieldItem.DataType == "boolean")
                                    {
                                        <div class="col radioBtn">
                                            @Html.RadioButton("IsFunctional", "Y", new { @Name = "InspectDocDetailTemp[" + j + "].IsFunctional" })正常
                                            @Html.RadioButton("IsFunctional", "N", new { @Name = "InspectDocDetailTemp[" + j + "].IsFunctional" })不正常
                                            @Html.ValidationMessage("InspectDocDetailTemp[" + j + "].IsFunctional", "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col">
                                            備註說明
                                            <br />
                                            @Html.TextArea("ErrorDescription", new { @Name = "ErrorDescription", rows = "3", @class = "form-control", @readonly = "readonly" })
                                        </div>
                                    }
                                    j++;
                                }
                            }
                        }
                    </div>
                </div>
                <hr />
            }
            else
            {
                currentItemName = item.ItemName;
            }
            int countFields = DocFields.Count();
            <input type="hidden" id="countFields" value="@countFields" />
        }
        <div class="text-center">
            <input class="btn btn-primary btn-lg" type="submit" value="暫時儲存" id="submitBtn" disabled />
            <input class="btn btn-primary" type="submit" value="暫存" id="submitScrollBtn" disabled/>
        </div>
        <hr />
    </div>
}
