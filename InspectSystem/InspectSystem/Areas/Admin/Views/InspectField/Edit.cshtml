@model InspectSystem.Models.InspectField

<script src="~/Scripts/Inspect/InspectField.js"></script>

@{
    Layout = null;
    var FieldDropDown = TempData["DropDownList"] as List<InspectSystem.Models.InspectFieldDropDown>;
    var rowCardNo = "rowCardNo" + Model.InspectItem.ItemOrder;
}


<style>
    /* Style the scale of checkbox. */
    input[type=checkbox], input[type=radio] {
        -ms-transform: scale(1.5); /* IE */
        -moz-transform: scale(1.5); /* FireFox */
        -webkit-transform: scale(1.5); /* Safari and Chrome */
        -o-transform: scale(1.5); /* Opera */
    }
</style>

<script>
    $(document).ready(function () {

        $("#FieldName").focus();

        @if (FieldDropDown.Count != 0) {
            @:$("#textbox1").val("@FieldDropDown[0].Value");
            {
                foreach(var item in FieldDropDown.Skip(1))
                {
                    @:loadDropDown("@item.Value");
                }
            }
        }
    });
    function showMsg(data) {
        if (!data.error) {
            $('#btnCloseModal').trigger('click');
            $('#@rowCardNo').html(data);
        } else {
            alert(data.error);
        }
    }
</script>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>欄位編輯</title>
</head>
<body>

    @using (Ajax.BeginForm("Edit", new AjaxOptions 
    { 
        HttpMethod = "POST", 
       // UpdateTargetId = rowCardNo,
        OnSuccess = "showMsg",
    }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.AreaId)
            @Html.HiddenFor(model => model.ShiftId)
            @Html.HiddenFor(model => model.ClassId)
            @Html.HiddenFor(model => model.ItemId)
            @Html.HiddenFor(model => model.FieldId)

            <div class="form-group row">
                @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    <p style="margin-top : 7px">@Html.DisplayFor(model => model.InspectItem.ItemName)</p>
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.FieldName, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FieldName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FieldName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.DataType, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10" style="margin-top : 7px">
                    @Html.RadioButtonFor(model => model.DataType, "string") 字串
                    @Html.RadioButtonFor(model => model.DataType, "float") 數字
                    @Html.RadioButtonFor(model => model.DataType, "checkbox") 勾選方塊
                    @Html.RadioButtonFor(model => model.DataType, "dropdownlist") 下拉選單
                    @Html.RadioButtonFor(model => model.DataType, "boolean") 該類別(正常/不正常)
                    @Html.ValidationMessageFor(model => model.DataType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="content-group">
                <div class="form-group row">
                    @Html.LabelFor(model => model.UnitOfData, htmlAttributes: new { @class = "col-form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UnitOfData, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitOfData, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.MinValue, htmlAttributes: new { @class = "col-form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MinValue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MinValue, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.MaxValue, htmlAttributes: new { @class = "col-form-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxValue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaxValue, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row" id="showPastValueDiv">
                    @Html.LabelFor(model => model.ShowPastValue, htmlAttributes: new { @class = "col-form-label col-md-2" })
                    <div class="col-md-10" style="margin-top : 7px">
                        @Html.CheckBoxFor(model => model.ShowPastValue)
                        @Html.ValidationMessageFor(model => model.ShowPastValue, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="form-group row">
                <!--for datatype dropdownlist, and dynamic inset textbox.-->
                <div class="card bg-light offset-md-2 col-md-10 textbox-group" role="form">
                    <div class="card-body">
                        <div class="row" id="TextBoxesGroup">
                            <div class="col-md-10">
                                <div id="TextBoxScope1" class="form-group">
                                    <label>選項 #1 : </label>
                                    <input type="text" id='textbox1' name="textbox1" class="form-control">
                                </div>
                            </div>
                        </div>

                        <hr />
                        @Html.Hidden("TextBoxCount", 1)
                        <div class="row col-md-10">
                            <button type="button" class="btn btn-primary" id="addButton">增加選項</button>
                            <span>&nbsp;</span>
                            <button type="button" class="btn btn-info" id="removeButton">移除選項</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.FieldStatus, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10" style="margin-top : 7px">
                    @Html.CheckBoxFor(model => model.FieldStatus)
                    @Html.ValidationMessageFor(model => model.FieldStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.IsRequired, htmlAttributes: new { @class = "col-form-label col-md-2" })
                <div class="col-md-10" style="margin-top : 7px">
                    @Html.CheckBoxFor(model => model.IsRequired)
                    @Html.ValidationMessageFor(model => model.IsRequired, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="offset-md-2">
                    <input type="submit" value="儲存" class="btn btn-primary" id="submitBtnEdit" />
                </div>
            </div>

            <div class="offset-md-2">
                <p style="color : red">無須設定大小值時，請將數值設定為0。</p>
                <p style="color : red">每個類別只可設定一個【該類別(正常/不正常)】的欄位，且不需輸入欄位名稱。</p>
            </div>

        </div>
    }
</body>
</html>
