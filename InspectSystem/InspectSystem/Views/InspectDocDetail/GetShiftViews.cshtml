@model InspectSystem.Models.InspectDocDetailViewModel

<link rel="stylesheet" href="~/Content/MyStyles/MyStyleForClassContent.css" />

@{
    var DocClasses = ViewData["classesOfDocDetails"] as List<InspectSystem.Models.InspectDocDetail>;
    var DocItems = ViewData["itemsOfDocDetails"] as List<InspectSystem.Models.InspectDocDetail>;
    var DocFields = ViewData["fieldsOfDocDetails"] as List<InspectSystem.Models.InspectDocDetail>;
}

@{

}

@foreach (var docClass in DocClasses)
{
    var currentItemName = "0";
    int i = 0, j = 0;
    <div class="card border-primary">
        <div class="card-header text-white bg-primary border-primary">
            @docClass.ClassName
        </div>

        <div class="card-body">
            <div class="container col-md-12">
                @foreach (var item in DocItems.Where(d => d.ClassId == docClass.ClassId).GroupBy(d => d.ItemId)
                                              .Select(g => g.FirstOrDefault()).OrderBy(s => s.ItemOrder))
                {
                    /* Display the ItemName when ItemName is not the same. */
                    if (item.ItemName != currentItemName)
                    {
                        <div class="row itemRow">
                            <div class="col-md-2 itemName mainCol">
                                @Html.DisplayFor(modelItem => item.ItemName)
                            </div>
                            <div class="col-md-6">
                                <table class="table no-border" style="margin-bottom: 0px">
                                    @foreach (var fieldItem in DocFields.Where(d => d.ClassId == item.ClassId))
                                    {
                                        /* Display all the FieldName belong the current Item. */
                                        if (item.ItemId == fieldItem.ItemId)
                                        {
                                            <tr>
                                                <td>
                                                    @if (fieldItem.FieldName != null)
                                                    {
                                                        @Html.DisplayFor(modelItem => fieldItem.FieldName)
                                                    }
                                                </td>

                                                <td>
                                                    @foreach (var docItem in Model.InspectDocDetail.Where(d => d.ClassId == fieldItem.ClassId))
                                                    {
                                                        /* Display textbox or checkbox for all fields, except boolean type. */
                                                        if (docItem.ItemId == item.ItemId && docItem.FieldId == fieldItem.FieldId &&
                                                            fieldItem.DataType != "boolean")
                                                        {
                                                            switch (fieldItem.DataType)
                                                            {
                                                                case "dropdownlist":
                                                                case "string":
                                                                    <span>
                                                                        @Html.DisplayFor(modelItem => docItem.Value)
                                                                    </span>
                                                                    break;

                                                                case "float":
                                                                    <span>
                                                                        @Html.DisplayFor(modelItem => docItem.Value)
                                                                        @Html.DisplayFor(modelItem => fieldItem.UnitOfData)
                                                                    </span>
                                                                    if (fieldItem.ToShowPastValue() == true)
                                                                    {
                                                                        <p style="color: orangered">昨日數值 : @fieldItem.PastValue()</p>
                                                                    }
                                                                    break;

                                                                case "checkbox":
                                                                    <span>
                                                                        @if (docItem.Value == "true")
                                                                        {
                                                                            @Html.CheckBox("InspectDocDetailTemp[" + i + "].Value", true, new { disabled = "disabled" })
                                                                        }
                                                                        else
                                                                        {
                                                                            @Html.CheckBox("InspectDocDetailTemp[" + i + "].Value", false, new { disabled = "disabled" })
                                                                        }
                                                                    </span>
                                                                    break;
                                                            }
                                                            i++;
                                                        }
                                                        else if (docItem.ItemId == item.ItemId && docItem.FieldId == fieldItem.FieldId &&
                                                                 fieldItem.DataType == "boolean")
                                                        {
                                                            i++; // Skip an array space to let the boolean type insert later.
                                                        }
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </table>
                            </div>
                            <div class="col-md-4" style="padding-top: 8px">
                                @foreach (var fieldItem in DocFields.Where(d => d.ClassId == item.ClassId))
                                {
                                    /* Display all the FieldName belong the current Item. */
                                    if (item.ItemId == fieldItem.ItemId)
                                    {

                                        foreach (var docItem in Model.InspectDocDetail.Where(d => d.ClassId == fieldItem.ClassId))
                                        {
                                            /* Display textbox or checkbox for all fields. */
                                            if (docItem.ItemId == item.ItemId && docItem.FieldId == fieldItem.FieldId)
                                            {
                                                if (fieldItem.DataType == "boolean")
                                                {
                                                    <div class="col">
                                                        @if (docItem.IsFunctional == "Y")
                                                        {
                                                            <p style="font-weight: bold">正常</p>
                                                        }
                                                        else if (docItem.IsFunctional == "N")
                                                        {
                                                            <p style="color: red;font-weight: bold">不正常</p>
                                                        }
                                                    </div>
                                                    <div class="w-100"></div>
                                                    <div class="col">
                                                        @if (docItem.ErrorDescription != null)
                                                        {
                                                            @Html.LabelFor(modelItem => docItem.ErrorDescription)
                                                            <br />
                                                            @Html.TextAreaFor(modelItem => docItem.ErrorDescription, new { rows = "3", @readonly = "readonly", @class = "form-control" })
                                                        }
                                                    </div>
                                                }
                                                j++;
                                            }
                                        }
                                    }
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        currentItemName = item.ItemName;
                    }
                    <hr />
                }
            </div>
        </div>
    </div>
}
