@model InspectSystem.Models.DEquipment.DEInspectDoc

@{
    ViewBag.Title = "產生巡檢單";
}

<h2>產生巡檢單</h2>

@using (Ajax.BeginForm(new AjaxOptions
{
    HttpMethod = "POST",
    OnBegin = "$.Toast.showToast({ 'title': '巡檢單產生中，請稍待...', 'icon': 'loading', 'duration': 0 })",
    OnSuccess = "showmsg"
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ApplyDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplyDate, new { htmlAttributes = new { @class = "form-control", max = Model.ApplyDate.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.ApplyDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.AreaName)
            @Html.LabelFor(model => model.AreaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AreaId, null, "請選擇", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AreaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.CycleName)
            @Html.LabelFor(model => model.CycleId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CycleId, null, "請先選擇區域", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CycleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.ClassName)
            @Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassId, null, "請先選擇週期", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="送出" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")
@section Scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.toast.js"></script>

    <script type="text/javascript">
        var homeURL = '@Url.Action("Index", "Home", new { Area = "" })';
        var getCycleURL = '@Url.Action("GetCycles", "DEInspectClass", new { Area = "Admin" })';
        var getClassURL = '@Url.Action("GetClasses", "DEInspectClass", new { Area = "Admin" })';

        function showmsg(data) {
            if (data.success !== null) {
                if (!data.success) {
                    alert(data.error);
                    $.Toast.hideToast();
                }
                else {
                    alert("巡檢單已產生!! [關閉後頁面回到首頁]");
                    location.replace(homeURL);
                }

            }
        }
        // Get cycles.
        $('#AreaId').change(function () {
            $('#AreaName').val($('#AreaId option:selected').text());
            $.ajax({
                url: getCycleURL,
                type: "POST",
                dataType: "json",
                data: { AreaId: $(this).val() },
                async: false,
                success: function (response) {
                    var select = $('#CycleId');
                    select.empty();
                    $.each(response, function (index, item) {
                        select.append($('<option></option>').text(item.Text).val(item.Value));
                    });
                }
            });
            $('#CycleId').trigger('change');
        });
        // Get Classes.
        $('#CycleId').change(function () {
            $('#CycleName').val($('#CycleId option:selected').text());
            var areaId = $('#AreaId').val();
            var cycleId = $(this).val();
            $.ajax({
                url: getClassURL,
                type: "POST",
                dataType: "json",
                data: { AreaId: areaId, CycleId: cycleId },
                async: false,
                success: function (response) {
                    var select = $('#ClassId');
                    select.empty();
                    $.each(response, function (index, item) {
                        select.append($('<option></option>').text(item.Text).val(item.Value));
                    });
                }
            });
            $('#ClassId').trigger('change');
        });
        //
        $('#ClassId').change(function () {
            $('#ClassName').val($('#ClassId option:selected').text());
        });
    </script>
}