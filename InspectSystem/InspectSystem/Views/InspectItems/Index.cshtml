@model IEnumerable<InspectSystem.Models.InspectItems>


@Scripts.Render("~/bundles//jquery")
<script src="~/Scripts/InspectItemsIndex.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<!--添加Ajax的script只可在主畫面，否則會產生重複監聽HTTPPOST的問題-->

@{

    ViewBag.Title = "巡檢項目維護";

    var SearchResult = TempData["SearchResult"] as List<InspectSystem.Models.InspectItems>;
    TempData.Keep();
}

<script>
    $(document).ready(function () {

        /* Get the areaName and className that user selected. */
        var aList = document.getElementById("areaDropDownList");
        var areaName = aList.options[aList.selectedIndex].text;
        var cList = document.getElementById("classDropDownList");
        var className = cList.options[cList.selectedIndex].text;

        /* To create a table row for user to new a item. */
        function createItemForm() {

            /* Create table row and data elements */
            var newRow = document.createElement("TR");
            var newCell1 = document.createElement("TD");
            newCell1.setAttribute("class", "col-md-2");
            var newCell2 = document.createElement("TD");
            newCell2.setAttribute("class", "col-md-2");
            var newCell3 = document.createElement("TD");
            newCell3.setAttribute("class", "col-md-2");
            var newCell4 = document.createElement("TD");
            newCell4.setAttribute("class", "col-md-2");
            var newCell5 = document.createElement("TD");
            newCell5.setAttribute("class", "col-md-2");
            var newCell6 = document.createElement("TD");
            newCell6.setAttribute("class", "col-md-2");

            var aName = document.createTextNode(areaName);
            var cName = document.createTextNode(className);

            /* input element, hidden areaID */
            var inputAreaID = document.createElement("input");
            inputAreaID.setAttribute("type", "hidden");
            inputAreaID.setAttribute("name", "areaID");
            inputAreaID.setAttribute("value", "@TempData["AreaListValue"]");

            /* input element, hidden classID */
            var inputClassID = document.createElement("input");
            inputClassID.setAttribute("type", "hidden");
            inputClassID.setAttribute("name", "classID");
            inputClassID.setAttribute("value", "@TempData["ClassListValue"]");

            /* input element, itemName */
            var inputitemName = document.createElement("input");
            inputitemName.setAttribute("type", "text");
            inputitemName.setAttribute("name", "itemName");
            inputitemName.setAttribute("id", "inputItemName")
            inputitemName.setAttribute("class", "form-control");
            inputitemName.setAttribute("Required", "Required");

            /* input element, itemStatus */
            var inputitemStatus = document.createElement("input");
            inputitemStatus.setAttribute("type", "checkbox");
            inputitemStatus.setAttribute("name", "itemStatus");
            inputitemStatus.setAttribute("id", "itemStatusCheck");
            inputitemStatus.setAttribute("data-val", "true");
            inputitemStatus.setAttribute("value", "true");
            inputitemStatus.setAttribute("checked", "true");  //set default value to true

            /* input element, submit button */
            var submitBtn = document.createElement("input");
            submitBtn.setAttribute("type", "submit");
            submitBtn.setAttribute("value", "儲存");
            submitBtn.setAttribute("class", "btn btn-primary");

            /* hyperlink element, Back to Index button */
            var backBtn = document.createElement("a");
            backBtn.setAttribute("class", "btn btn-info");
            backBtn.setAttribute("style", "margin-left:3px");
            backBtn.setAttribute("href", "@Url.Action("Index")");
            var btnText = document.createTextNode("返回");
            backBtn.appendChild(btnText);

            /* Insert elements to cells */
            newCell1.appendChild(inputAreaID);
            newCell1.appendChild(aName);
            newCell2.appendChild(inputClassID);
            newCell2.appendChild(cName);
            newCell3.appendChild(inputitemName);
            newCell4.appendChild(inputitemStatus);
            newCell5.appendChild(submitBtn);
            newCell5.appendChild(backBtn);

            /* Insert cells to the new row */
            newRow.appendChild(newCell1);
            newRow.appendChild(newCell2);
            newRow.appendChild(newCell3);
            newRow.appendChild(newCell4);
            newRow.appendChild(newCell5);
            newRow.appendChild(newCell6);

            document.getElementById("createTable").appendChild(newRow);
        }

        if (@TempData["AreaListValue"] != 0 && @TempData["ClassListValue"] != 0) {
            $("#createBtn").attr("disabled", false);
            $("#sortBtn").attr("disabled", false);
        }

        /* Create a new row for insert item's detail */
        $("#createBtn").click(function () {

            createItemForm();
            /* When Creating new item, disable other edit buttons */
            $("#createBtn").attr("disabled", true);
            $("#sortBtn").attr("disabled", true);
            $(".editBtn").attr("disabled", true);
            document.getElementById("inputItemName").focus({ preventScroll: false });
        });

    });
</script>

<style>
    /* The items that can be edit (Hidden by Default) */
    .hideEditItems {
        display: none;
    }
    /* The fields of items (Hidden by Default) */
    .fieldPanel {
        display: none;
    }

    #areaDropDownList, #classDropDownList {
        width: 500px;
    }

    .table {
        table-layout: fixed;
    }

    /* The canel button and message for sorting (Hidden by Default) */
    #sortBtnCanel, #sortMsg {
        display: none;
    }
</style>

<h2>
    <b>巡檢項目維護</b>
</h2>

<!--使用者選擇區域與類別進行搜尋-->
<hr />
@using (Html.BeginForm("SearchItems", "InspectItems", FormMethod.Post, new { @class = "form-inline" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="form-group col-md-5">
            @Html.Label("選擇區域:", new { @for = "AreaList" })
            @Html.DropDownList("AreaList", null, "請選擇",
                                new { @class = "form-control", name = "AreaList", required = "required", id = "areaDropDownList" })
        </div>
        <div class="form-group col-md-5">
            @Html.Label("選擇類別:", new { @for = "ClassList" })
            @Html.DropDownList("ClassList", null, "請選擇",
                                new { @class = "form-control", name = "ClassList", required = "required", id = "classDropDownList" })
        </div>
        <div class="form-group col-md-2">
            <input type="submit" value="查詢項目" class="btn" />
        </div>
    </div>
}

<hr />
<div class="container">
    <button class="btn btn-primary" id="createBtn" disabled>新增項目</button>
    <button class="btn btn-primary" id="sortBtn" disabled>排序</button>
    <button class="btn btn-info" id="sortBtnCanel">取消排序</button>
</div>
<br />


<table class="table table-hover" id="editTable">
    <tr>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.InspectAreas.AreaName)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.InspectClasses.ClassName)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.ItemName)
        </th>
        <th class="col-md-2">
            @Html.DisplayNameFor(model => model.ItemStatus)
        </th>
        <th class="col-md-1">
            @Html.DisplayNameFor(model => model.ItemOrder)
        </th>
        <th class="col-md-2"></th>
        <th class="col-md-1"></th>
    </tr>

    <tbody id="sortItem">
        @if (SearchResult == null) /* Not starting to search. */
        {

        }
        else
        {
            /* 參數row做為各個編輯項目的編號 */
            int row = 1;

            foreach (var item in SearchResult)
            {
                /* Give class name, ID to the display rows, edit rows and panels with each row */
                string displayRow = "displayRow" + row;
                string editRow = "editRow" + row;
                string hideACIDNo = "hideACIDNo" + row;
                string hideItemIDNo = "hideItemIDNo" + row;
                string fieldPanelNo = "fieldPanelNo" + row;
                int acid = item.ACID;
                int itemid = item.ItemID;
                int zoneNo = acid * 100 + itemid;
                string fieldDivNo = "fieldDivNo" + zoneNo;

                <tr>
                    @using (Html.BeginForm("Edit", "InspectItems", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        @Html.HiddenFor(modelItem => item.ACID, new { id = hideACIDNo })
                        @Html.HiddenFor(modelItem => item.ItemID, new { id = hideItemIDNo })
                        <td class="col-md-2">
                            @Html.DisplayFor(modelItem => item.InspectAreas.AreaName)
                        </td>
                        <td class="col-md-2">
                            @Html.DisplayFor(modelItem => item.InspectClasses.ClassName)
                        </td>
                        <td class="col-md-2">
                            <span class="@displayRow">@Html.DisplayFor(modelItem => item.ItemName)</span>
                            <span class="@editRow hideEditItems">@Html.EditorFor(modelItem => item.ItemName, new { htmlAttributes = new { @class = "form-control" } })</span>
                            @Html.ValidationMessageFor(modelItem => item.ItemName, "", new { @class = "text-danger" })
                        </td>
                        <td class="col-md-2">
                            <span class="@displayRow">@Html.DisplayFor(modelItem => item.ItemStatus)</span>
                            <span class="@editRow hideEditItems">@Html.CheckBoxFor(modelItem => item.ItemStatus)</span>
                        </td>
                        <td class="col-md-1">
                            @Html.DisplayFor(modelItem => item.ItemOrder)
                        </td>
                        <td class="col-md-2">
                            <input type="button" class="btn editBtn" value="編輯" id="@row" />
                            <input type="submit" class="@editRow hideEditItems btn btn-primary" value="儲存" />
                            <a href="@Url.Action("Index")" class="btn btn-info @editRow hideEditItems">返回</a>
                        </td>
                    }
                    <td class="col-md-1">
                        <button class="btn fieldBtn" value="@row">欄位</button>
                    </td>
                </tr>

                /* 給TR及欄位的Panel皆定義fieldPanel與fieldPanelNo的class，作雙層slide的視覺表現 */
                <tr class="fieldPanel @fieldPanelNo">
                    <td colspan=7>
                        <div class="panel panel-info fieldPanel @fieldPanelNo">
                            <div class="panel-heading">欄位</div>
                            <div class="panel-body">
                                <div class="fieldDiv" id="@fieldDivNo"></div>
                            </div>
                        </div>
                    </td>
                </tr>
                row++;
            }
        }
    </tbody>
</table>

@using (Html.BeginForm("Create", "InspectItems", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <table class="table" id="createTable"></table>
}

<div>
    <p style="color: red" id="sortMsg">*拖曳項目以排序</p>
</div>


@section scripts{
    <script src="~/Scripts/jquery-ui.js"></script>

    <script>
        $(document).ready(function () {
            var ACID;
            @if (SearchResult == null) /* Not starting to search. */
            {
                @:ACID = 0;
            }
            else
            {
                if (SearchResult.Count() == 0) /* Search result is 0. */
                {
                    @:ACID = 0;
                }
                else
                {
                    @:ACID = @SearchResult.FirstOrDefault().ACID;
                }
            }


            $("#sortBtn").click(function () {

                /* When sorting items, disable other buttons */
                $("#createBtn").attr("disabled", true);
                $("#sortBtn").attr("disabled", true);
                $(".editBtn").attr("disabled", true);
                $(".fieldBtn").attr("disabled", true);

                $("#sortBtnCanel").show();
                $("#sortMsg").show();

                /* While sorting, delete tr fields to sort items. */
                $(".fieldPanel").remove();

                /* enable item sorting. */
                $("#sortItem").sortable({
        opacity: 0.6,
                    cursor: 'move',
                    axis: 'y',
                    start: function (event, ui) {
                        var start_pos = ui.item.index();
                        console.log("start_pos:" + start_pos); //For debug
                        ui.item.data('start_pos', start_pos);
                    },
                    update: function (event, ui) {
                        //var productOrder = $(this).sortable('toArray').toString();
                        var oldIndex = ui.item.data('start_pos');
                        console.log("old:" + oldIndex); //For debug
                        var newIndex = ui.item.index();
                        console.log("new:" + newIndex); //For debug
                        $.ajax({
                            type: 'post',
                            url: '/InspectItems/SetItemOrder',
                            data: {
                                oldIndex: oldIndex + 1,
                                newIndex: newIndex + 1,
                                acid: ACID,
                                //page: currPage,
                                //pageSize: pageSize
                            },
                            success: function (result) {
                                console.log(result); //For debug
                                window.location.reload(true);
                            },
                            error: function (msg) {
                                alert(msg);
                            }
                        });
                    }
                    });
                $("#editTable").disableSelection();
                });

            $("#sortBtnCanel").click(function () {

                    /* Reload page. */
                    window.location.reload(true);
                });

        });
    </script>
}